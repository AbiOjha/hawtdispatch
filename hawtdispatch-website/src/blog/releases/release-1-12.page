---
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

blog_post: true
title: HawtDispatch 1.12 Released
author: Hiram Chirino
author_url: http://fusesource.com
created_at: 2012-09-20 16:06:40 -0500
--- 

[FuseSource](http://fusesource.com) is pleased to announce the availability of
HawtDispatch 1.12.

HawtDispatch is a small ( less than 100k ) thread pooling and NIO event
notification framework API modeled after the `libdispatch` API that Apple
created to power the Grand Central Dispatch (GCD) technology in OS X. It
allows you to easily develop multi-threaded applications without having to
deal with the problems that traditionally plague multi-threaded application
development.

**HawtDispatch 1.12 Highlights**

* Custom dispatch sources will now return null after the event has been received to avoid accidentally double processing events.
* Make sure we only return false from the offer method when the transport is also full()
* Add a closeOnCancel option to disable closing the socket when the transport is stopped.
* Rename the SecuredTransport interface to SecuredSession and now both the SSLProtocolCodec and SslTransport implement it.
* You can now handle SSL/TLS encoding/decoding via a wrapping protocol codec.  ProtocolCodec and Transport interfaces needs a couple of adjustments to properly support the co
* Better handling of getting the local host address.
* Protocol codec decoding optimizations.
* Move all the connect logic into the start method.
* Do host name resolutions on a blocking executor to avoid stalling the hawtdispatch threads.
* Resize the read buffer after reading from the channel if to avoid to avoid holding on to large buffers.
* Support changing the socket send/recv buffer size on started transports and servers.
* Do at least a non blocking select when we notice that another thread requested the NIO manager wakeup.  This should allow us to pickup any new IO events that have occurred 
* Dropped the continuations example, added a SSL transport client example

Further information:

* [Download](http://hawtdispatch.fusesource.org/download.html)
* [Change Log](https://github.com/fusesource/hawtdispatch/blob/master/changelog.md)
* [Documentation](http://hawtdispatch.fusesource.org)

[Feedback](http://hawtdispatch.fusesource.org/community/index.html) is always welcome! 



